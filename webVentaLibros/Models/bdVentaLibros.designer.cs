#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webVentaLibros.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="bdVentaLibros")]
	public partial class bdVentaLibrosDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAutores(Autores instance);
    partial void UpdateAutores(Autores instance);
    partial void DeleteAutores(Autores instance);
    partial void InsertAutorPorLibro(AutorPorLibro instance);
    partial void UpdateAutorPorLibro(AutorPorLibro instance);
    partial void DeleteAutorPorLibro(AutorPorLibro instance);
    partial void InsertCalificacionPorLibro(CalificacionPorLibro instance);
    partial void UpdateCalificacionPorLibro(CalificacionPorLibro instance);
    partial void DeleteCalificacionPorLibro(CalificacionPorLibro instance);
    partial void InsertCalificacionPorUsuario(CalificacionPorUsuario instance);
    partial void UpdateCalificacionPorUsuario(CalificacionPorUsuario instance);
    partial void DeleteCalificacionPorUsuario(CalificacionPorUsuario instance);
    partial void InsertComentarioPorLibro(ComentarioPorLibro instance);
    partial void UpdateComentarioPorLibro(ComentarioPorLibro instance);
    partial void DeleteComentarioPorLibro(ComentarioPorLibro instance);
    partial void InsertDetallePorPedido(DetallePorPedido instance);
    partial void UpdateDetallePorPedido(DetallePorPedido instance);
    partial void DeleteDetallePorPedido(DetallePorPedido instance);
    partial void InsertEditoriales(Editoriales instance);
    partial void UpdateEditoriales(Editoriales instance);
    partial void DeleteEditoriales(Editoriales instance);
    partial void InsertEstados(Estados instance);
    partial void UpdateEstados(Estados instance);
    partial void DeleteEstados(Estados instance);
    partial void InsertGeneros(Generos instance);
    partial void UpdateGeneros(Generos instance);
    partial void DeleteGeneros(Generos instance);
    partial void InsertIntercambios(Intercambios instance);
    partial void UpdateIntercambios(Intercambios instance);
    partial void DeleteIntercambios(Intercambios instance);
    partial void InsertLibros(Libros instance);
    partial void UpdateLibros(Libros instance);
    partial void DeleteLibros(Libros instance);
    partial void InsertLocalidades(Localidades instance);
    partial void UpdateLocalidades(Localidades instance);
    partial void DeleteLocalidades(Localidades instance);
    partial void InsertPedidos(Pedidos instance);
    partial void UpdatePedidos(Pedidos instance);
    partial void DeletePedidos(Pedidos instance);
    partial void InsertProvincias(Provincias instance);
    partial void UpdateProvincias(Provincias instance);
    partial void DeleteProvincias(Provincias instance);
    partial void InsertPublicacionPorUsuario(PublicacionPorUsuario instance);
    partial void UpdatePublicacionPorUsuario(PublicacionPorUsuario instance);
    partial void DeletePublicacionPorUsuario(PublicacionPorUsuario instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public bdVentaLibrosDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["bdVentaLibrosConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public bdVentaLibrosDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bdVentaLibrosDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bdVentaLibrosDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public bdVentaLibrosDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Autores> Autores
		{
			get
			{
				return this.GetTable<Autores>();
			}
		}
		
		public System.Data.Linq.Table<AutorPorLibro> AutorPorLibro
		{
			get
			{
				return this.GetTable<AutorPorLibro>();
			}
		}
		
		public System.Data.Linq.Table<CalificacionPorLibro> CalificacionPorLibro
		{
			get
			{
				return this.GetTable<CalificacionPorLibro>();
			}
		}
		
		public System.Data.Linq.Table<CalificacionPorUsuario> CalificacionPorUsuario
		{
			get
			{
				return this.GetTable<CalificacionPorUsuario>();
			}
		}
		
		public System.Data.Linq.Table<ComentarioPorLibro> ComentarioPorLibro
		{
			get
			{
				return this.GetTable<ComentarioPorLibro>();
			}
		}
		
		public System.Data.Linq.Table<DetallePorPedido> DetallePorPedido
		{
			get
			{
				return this.GetTable<DetallePorPedido>();
			}
		}
		
		public System.Data.Linq.Table<Editoriales> Editoriales
		{
			get
			{
				return this.GetTable<Editoriales>();
			}
		}
		
		public System.Data.Linq.Table<Estados> Estados
		{
			get
			{
				return this.GetTable<Estados>();
			}
		}
		
		public System.Data.Linq.Table<Generos> Generos
		{
			get
			{
				return this.GetTable<Generos>();
			}
		}
		
		public System.Data.Linq.Table<Intercambios> Intercambios
		{
			get
			{
				return this.GetTable<Intercambios>();
			}
		}
		
		public System.Data.Linq.Table<Libros> Libros
		{
			get
			{
				return this.GetTable<Libros>();
			}
		}
		
		public System.Data.Linq.Table<Localidades> Localidades
		{
			get
			{
				return this.GetTable<Localidades>();
			}
		}
		
		public System.Data.Linq.Table<Pedidos> Pedidos
		{
			get
			{
				return this.GetTable<Pedidos>();
			}
		}
		
		public System.Data.Linq.Table<Provincias> Provincias
		{
			get
			{
				return this.GetTable<Provincias>();
			}
		}
		
		public System.Data.Linq.Table<PublicacionPorUsuario> PublicacionPorUsuario
		{
			get
			{
				return this.GetTable<PublicacionPorUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autores")]
	public partial class Autores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAutor;
		
		private string _apellidos;
		
		private string _nombres;
		
		private EntitySet<AutorPorLibro> _AutorPorLibro;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAutorChanging(int value);
    partial void OnidAutorChanged();
    partial void OnapellidosChanging(string value);
    partial void OnapellidosChanged();
    partial void OnnombresChanging(string value);
    partial void OnnombresChanged();
    #endregion
		
		public Autores()
		{
			this._AutorPorLibro = new EntitySet<AutorPorLibro>(new Action<AutorPorLibro>(this.attach_AutorPorLibro), new Action<AutorPorLibro>(this.detach_AutorPorLibro));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAutor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAutor
		{
			get
			{
				return this._idAutor;
			}
			set
			{
				if ((this._idAutor != value))
				{
					this.OnidAutorChanging(value);
					this.SendPropertyChanging();
					this._idAutor = value;
					this.SendPropertyChanged("idAutor");
					this.OnidAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellidos", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string apellidos
		{
			get
			{
				return this._apellidos;
			}
			set
			{
				if ((this._apellidos != value))
				{
					this.OnapellidosChanging(value);
					this.SendPropertyChanging();
					this._apellidos = value;
					this.SendPropertyChanged("apellidos");
					this.OnapellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombres", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombres
		{
			get
			{
				return this._nombres;
			}
			set
			{
				if ((this._nombres != value))
				{
					this.OnnombresChanging(value);
					this.SendPropertyChanging();
					this._nombres = value;
					this.SendPropertyChanged("nombres");
					this.OnnombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autores_AutorPorLibro", Storage="_AutorPorLibro", ThisKey="idAutor", OtherKey="idAutor")]
		public EntitySet<AutorPorLibro> AutorPorLibro
		{
			get
			{
				return this._AutorPorLibro;
			}
			set
			{
				this._AutorPorLibro.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutorPorLibro(AutorPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Autores = this;
		}
		
		private void detach_AutorPorLibro(AutorPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Autores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutorPorLibro")]
	public partial class AutorPorLibro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codigoLibro;
		
		private int _idAutor;
		
		private EntityRef<Autores> _Autores;
		
		private EntityRef<Libros> _Libros;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodigoLibroChanging(string value);
    partial void OncodigoLibroChanged();
    partial void OnidAutorChanging(int value);
    partial void OnidAutorChanged();
    #endregion
		
		public AutorPorLibro()
		{
			this._Autores = default(EntityRef<Autores>);
			this._Libros = default(EntityRef<Libros>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigoLibro", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codigoLibro
		{
			get
			{
				return this._codigoLibro;
			}
			set
			{
				if ((this._codigoLibro != value))
				{
					if (this._Libros.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodigoLibroChanging(value);
					this.SendPropertyChanging();
					this._codigoLibro = value;
					this.SendPropertyChanged("codigoLibro");
					this.OncodigoLibroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAutor", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAutor
		{
			get
			{
				return this._idAutor;
			}
			set
			{
				if ((this._idAutor != value))
				{
					if (this._Autores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAutorChanging(value);
					this.SendPropertyChanging();
					this._idAutor = value;
					this.SendPropertyChanged("idAutor");
					this.OnidAutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autores_AutorPorLibro", Storage="_Autores", ThisKey="idAutor", OtherKey="idAutor", IsForeignKey=true)]
		public Autores Autores
		{
			get
			{
				return this._Autores.Entity;
			}
			set
			{
				Autores previousValue = this._Autores.Entity;
				if (((previousValue != value) 
							|| (this._Autores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autores.Entity = null;
						previousValue.AutorPorLibro.Remove(this);
					}
					this._Autores.Entity = value;
					if ((value != null))
					{
						value.AutorPorLibro.Add(this);
						this._idAutor = value.idAutor;
					}
					else
					{
						this._idAutor = default(int);
					}
					this.SendPropertyChanged("Autores");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_AutorPorLibro", Storage="_Libros", ThisKey="codigoLibro", OtherKey="codigoBarra", IsForeignKey=true)]
		public Libros Libros
		{
			get
			{
				return this._Libros.Entity;
			}
			set
			{
				Libros previousValue = this._Libros.Entity;
				if (((previousValue != value) 
							|| (this._Libros.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Libros.Entity = null;
						previousValue.AutorPorLibro.Remove(this);
					}
					this._Libros.Entity = value;
					if ((value != null))
					{
						value.AutorPorLibro.Add(this);
						this._codigoLibro = value.codigoBarra;
					}
					else
					{
						this._codigoLibro = default(string);
					}
					this.SendPropertyChanged("Libros");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalificacionPorLibro")]
	public partial class CalificacionPorLibro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codigoLibro;
		
		private int _idUsuario;
		
		private int _calificacion;
		
		private System.DateTime _fechaHora;
		
		private EntityRef<Libros> _Libros;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodigoLibroChanging(string value);
    partial void OncodigoLibroChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OncalificacionChanging(int value);
    partial void OncalificacionChanged();
    partial void OnfechaHoraChanging(System.DateTime value);
    partial void OnfechaHoraChanged();
    #endregion
		
		public CalificacionPorLibro()
		{
			this._Libros = default(EntityRef<Libros>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigoLibro", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codigoLibro
		{
			get
			{
				return this._codigoLibro;
			}
			set
			{
				if ((this._codigoLibro != value))
				{
					if (this._Libros.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodigoLibroChanging(value);
					this.SendPropertyChanging();
					this._codigoLibro = value;
					this.SendPropertyChanged("codigoLibro");
					this.OncodigoLibroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calificacion", DbType="Int NOT NULL")]
		public int calificacion
		{
			get
			{
				return this._calificacion;
			}
			set
			{
				if ((this._calificacion != value))
				{
					this.OncalificacionChanging(value);
					this.SendPropertyChanging();
					this._calificacion = value;
					this.SendPropertyChanged("calificacion");
					this.OncalificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaHora", AutoSync=AutoSync.Always, DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime fechaHora
		{
			get
			{
				return this._fechaHora;
			}
			set
			{
				if ((this._fechaHora != value))
				{
					this.OnfechaHoraChanging(value);
					this.SendPropertyChanging();
					this._fechaHora = value;
					this.SendPropertyChanged("fechaHora");
					this.OnfechaHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_CalificacionPorLibro", Storage="_Libros", ThisKey="codigoLibro", OtherKey="codigoBarra", IsForeignKey=true)]
		public Libros Libros
		{
			get
			{
				return this._Libros.Entity;
			}
			set
			{
				Libros previousValue = this._Libros.Entity;
				if (((previousValue != value) 
							|| (this._Libros.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Libros.Entity = null;
						previousValue.CalificacionPorLibro.Remove(this);
					}
					this._Libros.Entity = value;
					if ((value != null))
					{
						value.CalificacionPorLibro.Add(this);
						this._codigoLibro = value.codigoBarra;
					}
					else
					{
						this._codigoLibro = default(string);
					}
					this.SendPropertyChanged("Libros");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_CalificacionPorLibro", Storage="_Usuarios", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.CalificacionPorLibro.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.CalificacionPorLibro.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CalificacionPorUsuario")]
	public partial class CalificacionPorUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuarioCalificado;
		
		private int _idUsuarioCalificador;
		
		private System.DateTime _fechaHora;
		
		private int _calificacion;
		
		private string _comentario;
		
		private EntityRef<Usuarios> _Usuarios;
		
		private EntityRef<Usuarios> _Usuarios1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioCalificadoChanging(int value);
    partial void OnidUsuarioCalificadoChanged();
    partial void OnidUsuarioCalificadorChanging(int value);
    partial void OnidUsuarioCalificadorChanged();
    partial void OnfechaHoraChanging(System.DateTime value);
    partial void OnfechaHoraChanged();
    partial void OncalificacionChanging(int value);
    partial void OncalificacionChanged();
    partial void OncomentarioChanging(string value);
    partial void OncomentarioChanged();
    #endregion
		
		public CalificacionPorUsuario()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			this._Usuarios1 = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuarioCalificado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsuarioCalificado
		{
			get
			{
				return this._idUsuarioCalificado;
			}
			set
			{
				if ((this._idUsuarioCalificado != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioCalificadoChanging(value);
					this.SendPropertyChanging();
					this._idUsuarioCalificado = value;
					this.SendPropertyChanged("idUsuarioCalificado");
					this.OnidUsuarioCalificadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuarioCalificador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsuarioCalificador
		{
			get
			{
				return this._idUsuarioCalificador;
			}
			set
			{
				if ((this._idUsuarioCalificador != value))
				{
					if (this._Usuarios1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioCalificadorChanging(value);
					this.SendPropertyChanging();
					this._idUsuarioCalificador = value;
					this.SendPropertyChanged("idUsuarioCalificador");
					this.OnidUsuarioCalificadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaHora", DbType="DateTime NOT NULL")]
		public System.DateTime fechaHora
		{
			get
			{
				return this._fechaHora;
			}
			set
			{
				if ((this._fechaHora != value))
				{
					this.OnfechaHoraChanging(value);
					this.SendPropertyChanging();
					this._fechaHora = value;
					this.SendPropertyChanged("fechaHora");
					this.OnfechaHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calificacion", DbType="Int NOT NULL")]
		public int calificacion
		{
			get
			{
				return this._calificacion;
			}
			set
			{
				if ((this._calificacion != value))
				{
					this.OncalificacionChanging(value);
					this.SendPropertyChanging();
					this._calificacion = value;
					this.SendPropertyChanged("calificacion");
					this.OncalificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentario", DbType="NVarChar(100)")]
		public string comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				if ((this._comentario != value))
				{
					this.OncomentarioChanging(value);
					this.SendPropertyChanging();
					this._comentario = value;
					this.SendPropertyChanged("comentario");
					this.OncomentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_CalificacionPorUsuario", Storage="_Usuarios", ThisKey="idUsuarioCalificado", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.CalificacionPorUsuario.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.CalificacionPorUsuario.Add(this);
						this._idUsuarioCalificado = value.idUsuario;
					}
					else
					{
						this._idUsuarioCalificado = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_CalificacionPorUsuario1", Storage="_Usuarios1", ThisKey="idUsuarioCalificador", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuarios Usuarios1
		{
			get
			{
				return this._Usuarios1.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios1.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios1.Entity = null;
						previousValue.CalificacionPorUsuario1.Remove(this);
					}
					this._Usuarios1.Entity = value;
					if ((value != null))
					{
						value.CalificacionPorUsuario1.Add(this);
						this._idUsuarioCalificador = value.idUsuario;
					}
					else
					{
						this._idUsuarioCalificador = default(int);
					}
					this.SendPropertyChanged("Usuarios1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComentarioPorLibro")]
	public partial class ComentarioPorLibro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codigoLibro;
		
		private int _idUsuario;
		
		private string _comentario;
		
		private int _idComentario;
		
		private EntityRef<Libros> _Libros;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodigoLibroChanging(string value);
    partial void OncodigoLibroChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OncomentarioChanging(string value);
    partial void OncomentarioChanged();
    partial void OnidComentarioChanging(int value);
    partial void OnidComentarioChanged();
    #endregion
		
		public ComentarioPorLibro()
		{
			this._Libros = default(EntityRef<Libros>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigoLibro", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codigoLibro
		{
			get
			{
				return this._codigoLibro;
			}
			set
			{
				if ((this._codigoLibro != value))
				{
					if (this._Libros.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodigoLibroChanging(value);
					this.SendPropertyChanging();
					this._codigoLibro = value;
					this.SendPropertyChanged("codigoLibro");
					this.OncodigoLibroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentario", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				if ((this._comentario != value))
				{
					this.OncomentarioChanging(value);
					this.SendPropertyChanging();
					this._comentario = value;
					this.SendPropertyChanged("comentario");
					this.OncomentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComentario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idComentario
		{
			get
			{
				return this._idComentario;
			}
			set
			{
				if ((this._idComentario != value))
				{
					this.OnidComentarioChanging(value);
					this.SendPropertyChanging();
					this._idComentario = value;
					this.SendPropertyChanged("idComentario");
					this.OnidComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_ComentarioPorLibro", Storage="_Libros", ThisKey="codigoLibro", OtherKey="codigoBarra", IsForeignKey=true)]
		public Libros Libros
		{
			get
			{
				return this._Libros.Entity;
			}
			set
			{
				Libros previousValue = this._Libros.Entity;
				if (((previousValue != value) 
							|| (this._Libros.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Libros.Entity = null;
						previousValue.ComentarioPorLibro.Remove(this);
					}
					this._Libros.Entity = value;
					if ((value != null))
					{
						value.ComentarioPorLibro.Add(this);
						this._codigoLibro = value.codigoBarra;
					}
					else
					{
						this._codigoLibro = default(string);
					}
					this.SendPropertyChanged("Libros");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_ComentarioPorLibro", Storage="_Usuarios", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.ComentarioPorLibro.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.ComentarioPorLibro.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetallePorPedido")]
	public partial class DetallePorPedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPedido;
		
		private string _codigoLibro;
		
		private int _cantidad;
		
		private decimal _precioUnitario;
		
		private EntityRef<Libros> _Libros;
		
		private EntityRef<Pedidos> _Pedidos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPedidoChanging(int value);
    partial void OnidPedidoChanged();
    partial void OncodigoLibroChanging(string value);
    partial void OncodigoLibroChanged();
    partial void OncantidadChanging(int value);
    partial void OncantidadChanged();
    partial void OnprecioUnitarioChanging(decimal value);
    partial void OnprecioUnitarioChanged();
    #endregion
		
		public DetallePorPedido()
		{
			this._Libros = default(EntityRef<Libros>);
			this._Pedidos = default(EntityRef<Pedidos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPedido", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPedido
		{
			get
			{
				return this._idPedido;
			}
			set
			{
				if ((this._idPedido != value))
				{
					if (this._Pedidos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPedidoChanging(value);
					this.SendPropertyChanging();
					this._idPedido = value;
					this.SendPropertyChanged("idPedido");
					this.OnidPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigoLibro", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codigoLibro
		{
			get
			{
				return this._codigoLibro;
			}
			set
			{
				if ((this._codigoLibro != value))
				{
					if (this._Libros.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncodigoLibroChanging(value);
					this.SendPropertyChanging();
					this._codigoLibro = value;
					this.SendPropertyChanged("codigoLibro");
					this.OncodigoLibroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Int NOT NULL")]
		public int cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precioUnitario", DbType="Decimal(6,2) NOT NULL")]
		public decimal precioUnitario
		{
			get
			{
				return this._precioUnitario;
			}
			set
			{
				if ((this._precioUnitario != value))
				{
					this.OnprecioUnitarioChanging(value);
					this.SendPropertyChanging();
					this._precioUnitario = value;
					this.SendPropertyChanged("precioUnitario");
					this.OnprecioUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_DetallePorPedido", Storage="_Libros", ThisKey="codigoLibro", OtherKey="codigoBarra", IsForeignKey=true)]
		public Libros Libros
		{
			get
			{
				return this._Libros.Entity;
			}
			set
			{
				Libros previousValue = this._Libros.Entity;
				if (((previousValue != value) 
							|| (this._Libros.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Libros.Entity = null;
						previousValue.DetallePorPedido.Remove(this);
					}
					this._Libros.Entity = value;
					if ((value != null))
					{
						value.DetallePorPedido.Add(this);
						this._codigoLibro = value.codigoBarra;
					}
					else
					{
						this._codigoLibro = default(string);
					}
					this.SendPropertyChanged("Libros");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedidos_DetallePorPedido", Storage="_Pedidos", ThisKey="idPedido", OtherKey="idPedido", IsForeignKey=true)]
		public Pedidos Pedidos
		{
			get
			{
				return this._Pedidos.Entity;
			}
			set
			{
				Pedidos previousValue = this._Pedidos.Entity;
				if (((previousValue != value) 
							|| (this._Pedidos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedidos.Entity = null;
						previousValue.DetallePorPedido.Remove(this);
					}
					this._Pedidos.Entity = value;
					if ((value != null))
					{
						value.DetallePorPedido.Add(this);
						this._idPedido = value.idPedido;
					}
					else
					{
						this._idPedido = default(int);
					}
					this.SendPropertyChanged("Pedidos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Editoriales")]
	public partial class Editoriales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEditorial;
		
		private string _nombre;
		
		private EntitySet<Libros> _Libros;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEditorialChanging(int value);
    partial void OnidEditorialChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Editoriales()
		{
			this._Libros = new EntitySet<Libros>(new Action<Libros>(this.attach_Libros), new Action<Libros>(this.detach_Libros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEditorial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEditorial
		{
			get
			{
				return this._idEditorial;
			}
			set
			{
				if ((this._idEditorial != value))
				{
					this.OnidEditorialChanging(value);
					this.SendPropertyChanging();
					this._idEditorial = value;
					this.SendPropertyChanged("idEditorial");
					this.OnidEditorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editoriales_Libros", Storage="_Libros", ThisKey="idEditorial", OtherKey="idEditorial")]
		public EntitySet<Libros> Libros
		{
			get
			{
				return this._Libros;
			}
			set
			{
				this._Libros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Libros(Libros entity)
		{
			this.SendPropertyChanging();
			entity.Editoriales = this;
		}
		
		private void detach_Libros(Libros entity)
		{
			this.SendPropertyChanging();
			entity.Editoriales = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estados")]
	public partial class Estados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEstado;
		
		private string _nombre;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntitySet<PublicacionPorUsuario> _PublicacionPorUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Estados()
		{
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._PublicacionPorUsuario = new EntitySet<PublicacionPorUsuario>(new Action<PublicacionPorUsuario>(this.attach_PublicacionPorUsuario), new Action<PublicacionPorUsuario>(this.detach_PublicacionPorUsuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Pedidos", Storage="_Pedidos", ThisKey="idEstado", OtherKey="idEstadoPedido")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_PublicacionPorUsuario", Storage="_PublicacionPorUsuario", ThisKey="idEstado", OtherKey="idEstado")]
		public EntitySet<PublicacionPorUsuario> PublicacionPorUsuario
		{
			get
			{
				return this._PublicacionPorUsuario;
			}
			set
			{
				this._PublicacionPorUsuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
		
		private void attach_PublicacionPorUsuario(PublicacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_PublicacionPorUsuario(PublicacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Generos")]
	public partial class Generos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idGenero;
		
		private string _nombre;
		
		private EntitySet<Libros> _Libros;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidGeneroChanging(int value);
    partial void OnidGeneroChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Generos()
		{
			this._Libros = new EntitySet<Libros>(new Action<Libros>(this.attach_Libros), new Action<Libros>(this.detach_Libros));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGenero", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idGenero
		{
			get
			{
				return this._idGenero;
			}
			set
			{
				if ((this._idGenero != value))
				{
					this.OnidGeneroChanging(value);
					this.SendPropertyChanging();
					this._idGenero = value;
					this.SendPropertyChanged("idGenero");
					this.OnidGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Generos_Libros", Storage="_Libros", ThisKey="idGenero", OtherKey="idGenero")]
		public EntitySet<Libros> Libros
		{
			get
			{
				return this._Libros;
			}
			set
			{
				this._Libros.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Libros(Libros entity)
		{
			this.SendPropertyChanging();
			entity.Generos = this;
		}
		
		private void detach_Libros(Libros entity)
		{
			this.SendPropertyChanging();
			entity.Generos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Intercambios")]
	public partial class Intercambios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPublicacionUsuario1;
		
		private int _idPublicacionUsuario2;
		
		private System.DateTime _fechaHora;
		
		private string _comentario;
		
		private System.Nullable<int> _calificacionUsuario1;
		
		private System.Nullable<int> _calificacionUsuario2;
		
		private EntityRef<PublicacionPorUsuario> _PublicacionPorUsuario;
		
		private EntityRef<PublicacionPorUsuario> _PublicacionPorUsuario1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPublicacionUsuario1Changing(int value);
    partial void OnidPublicacionUsuario1Changed();
    partial void OnidPublicacionUsuario2Changing(int value);
    partial void OnidPublicacionUsuario2Changed();
    partial void OnfechaHoraChanging(System.DateTime value);
    partial void OnfechaHoraChanged();
    partial void OncomentarioChanging(string value);
    partial void OncomentarioChanged();
    partial void OncalificacionUsuario1Changing(System.Nullable<int> value);
    partial void OncalificacionUsuario1Changed();
    partial void OncalificacionUsuario2Changing(System.Nullable<int> value);
    partial void OncalificacionUsuario2Changed();
    #endregion
		
		public Intercambios()
		{
			this._PublicacionPorUsuario = default(EntityRef<PublicacionPorUsuario>);
			this._PublicacionPorUsuario1 = default(EntityRef<PublicacionPorUsuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPublicacionUsuario1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPublicacionUsuario1
		{
			get
			{
				return this._idPublicacionUsuario1;
			}
			set
			{
				if ((this._idPublicacionUsuario1 != value))
				{
					if (this._PublicacionPorUsuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPublicacionUsuario1Changing(value);
					this.SendPropertyChanging();
					this._idPublicacionUsuario1 = value;
					this.SendPropertyChanged("idPublicacionUsuario1");
					this.OnidPublicacionUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPublicacionUsuario2", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPublicacionUsuario2
		{
			get
			{
				return this._idPublicacionUsuario2;
			}
			set
			{
				if ((this._idPublicacionUsuario2 != value))
				{
					if (this._PublicacionPorUsuario1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPublicacionUsuario2Changing(value);
					this.SendPropertyChanging();
					this._idPublicacionUsuario2 = value;
					this.SendPropertyChanged("idPublicacionUsuario2");
					this.OnidPublicacionUsuario2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaHora", AutoSync=AutoSync.Always, DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime fechaHora
		{
			get
			{
				return this._fechaHora;
			}
			set
			{
				if ((this._fechaHora != value))
				{
					this.OnfechaHoraChanging(value);
					this.SendPropertyChanging();
					this._fechaHora = value;
					this.SendPropertyChanged("fechaHora");
					this.OnfechaHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentario", DbType="NVarChar(200)")]
		public string comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				if ((this._comentario != value))
				{
					this.OncomentarioChanging(value);
					this.SendPropertyChanging();
					this._comentario = value;
					this.SendPropertyChanged("comentario");
					this.OncomentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calificacionUsuario1", DbType="Int")]
		public System.Nullable<int> calificacionUsuario1
		{
			get
			{
				return this._calificacionUsuario1;
			}
			set
			{
				if ((this._calificacionUsuario1 != value))
				{
					this.OncalificacionUsuario1Changing(value);
					this.SendPropertyChanging();
					this._calificacionUsuario1 = value;
					this.SendPropertyChanged("calificacionUsuario1");
					this.OncalificacionUsuario1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_calificacionUsuario2", DbType="Int")]
		public System.Nullable<int> calificacionUsuario2
		{
			get
			{
				return this._calificacionUsuario2;
			}
			set
			{
				if ((this._calificacionUsuario2 != value))
				{
					this.OncalificacionUsuario2Changing(value);
					this.SendPropertyChanging();
					this._calificacionUsuario2 = value;
					this.SendPropertyChanged("calificacionUsuario2");
					this.OncalificacionUsuario2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublicacionPorUsuario_Intercambios", Storage="_PublicacionPorUsuario", ThisKey="idPublicacionUsuario1", OtherKey="idPublicacion", IsForeignKey=true)]
		public PublicacionPorUsuario PublicacionPorUsuario
		{
			get
			{
				return this._PublicacionPorUsuario.Entity;
			}
			set
			{
				PublicacionPorUsuario previousValue = this._PublicacionPorUsuario.Entity;
				if (((previousValue != value) 
							|| (this._PublicacionPorUsuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PublicacionPorUsuario.Entity = null;
						previousValue.Intercambios.Remove(this);
					}
					this._PublicacionPorUsuario.Entity = value;
					if ((value != null))
					{
						value.Intercambios.Add(this);
						this._idPublicacionUsuario1 = value.idPublicacion;
					}
					else
					{
						this._idPublicacionUsuario1 = default(int);
					}
					this.SendPropertyChanged("PublicacionPorUsuario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublicacionPorUsuario_Intercambios1", Storage="_PublicacionPorUsuario1", ThisKey="idPublicacionUsuario2", OtherKey="idPublicacion", IsForeignKey=true)]
		public PublicacionPorUsuario PublicacionPorUsuario1
		{
			get
			{
				return this._PublicacionPorUsuario1.Entity;
			}
			set
			{
				PublicacionPorUsuario previousValue = this._PublicacionPorUsuario1.Entity;
				if (((previousValue != value) 
							|| (this._PublicacionPorUsuario1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PublicacionPorUsuario1.Entity = null;
						previousValue.Intercambios1.Remove(this);
					}
					this._PublicacionPorUsuario1.Entity = value;
					if ((value != null))
					{
						value.Intercambios1.Add(this);
						this._idPublicacionUsuario2 = value.idPublicacion;
					}
					else
					{
						this._idPublicacionUsuario2 = default(int);
					}
					this.SendPropertyChanged("PublicacionPorUsuario1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Libros")]
	public partial class Libros : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _codigoBarra;
		
		private string _titulo;
		
		private System.Nullable<int> _idEditorial;
		
		private System.Nullable<int> _paginas;
		
		private System.Nullable<int> _edicion;
		
		private System.Nullable<int> _idGenero;
		
		private string _foto;
		
		private System.Nullable<decimal> _precio;
		
		private string _sinopsis;
		
		private System.Nullable<int> _stock;
		
		private System.Nullable<System.DateTime> _fechaAlta;
		
		private EntitySet<AutorPorLibro> _AutorPorLibro;
		
		private EntitySet<CalificacionPorLibro> _CalificacionPorLibro;
		
		private EntitySet<ComentarioPorLibro> _ComentarioPorLibro;
		
		private EntitySet<DetallePorPedido> _DetallePorPedido;
		
		private EntityRef<Editoriales> _Editoriales;
		
		private EntityRef<Generos> _Generos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodigoBarraChanging(string value);
    partial void OncodigoBarraChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OnidEditorialChanging(System.Nullable<int> value);
    partial void OnidEditorialChanged();
    partial void OnpaginasChanging(System.Nullable<int> value);
    partial void OnpaginasChanged();
    partial void OnedicionChanging(System.Nullable<int> value);
    partial void OnedicionChanged();
    partial void OnidGeneroChanging(System.Nullable<int> value);
    partial void OnidGeneroChanged();
    partial void OnfotoChanging(string value);
    partial void OnfotoChanged();
    partial void OnprecioChanging(System.Nullable<decimal> value);
    partial void OnprecioChanged();
    partial void OnsinopsisChanging(string value);
    partial void OnsinopsisChanged();
    partial void OnstockChanging(System.Nullable<int> value);
    partial void OnstockChanged();
    partial void OnfechaAltaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaAltaChanged();
    #endregion
		
		public Libros()
		{
			this._AutorPorLibro = new EntitySet<AutorPorLibro>(new Action<AutorPorLibro>(this.attach_AutorPorLibro), new Action<AutorPorLibro>(this.detach_AutorPorLibro));
			this._CalificacionPorLibro = new EntitySet<CalificacionPorLibro>(new Action<CalificacionPorLibro>(this.attach_CalificacionPorLibro), new Action<CalificacionPorLibro>(this.detach_CalificacionPorLibro));
			this._ComentarioPorLibro = new EntitySet<ComentarioPorLibro>(new Action<ComentarioPorLibro>(this.attach_ComentarioPorLibro), new Action<ComentarioPorLibro>(this.detach_ComentarioPorLibro));
			this._DetallePorPedido = new EntitySet<DetallePorPedido>(new Action<DetallePorPedido>(this.attach_DetallePorPedido), new Action<DetallePorPedido>(this.detach_DetallePorPedido));
			this._Editoriales = default(EntityRef<Editoriales>);
			this._Generos = default(EntityRef<Generos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_codigoBarra", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string codigoBarra
		{
			get
			{
				return this._codigoBarra;
			}
			set
			{
				if ((this._codigoBarra != value))
				{
					this.OncodigoBarraChanging(value);
					this.SendPropertyChanging();
					this._codigoBarra = value;
					this.SendPropertyChanged("codigoBarra");
					this.OncodigoBarraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEditorial", DbType="Int")]
		public System.Nullable<int> idEditorial
		{
			get
			{
				return this._idEditorial;
			}
			set
			{
				if ((this._idEditorial != value))
				{
					if (this._Editoriales.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEditorialChanging(value);
					this.SendPropertyChanging();
					this._idEditorial = value;
					this.SendPropertyChanged("idEditorial");
					this.OnidEditorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paginas", DbType="Int")]
		public System.Nullable<int> paginas
		{
			get
			{
				return this._paginas;
			}
			set
			{
				if ((this._paginas != value))
				{
					this.OnpaginasChanging(value);
					this.SendPropertyChanging();
					this._paginas = value;
					this.SendPropertyChanged("paginas");
					this.OnpaginasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edicion", DbType="Int")]
		public System.Nullable<int> edicion
		{
			get
			{
				return this._edicion;
			}
			set
			{
				if ((this._edicion != value))
				{
					this.OnedicionChanging(value);
					this.SendPropertyChanging();
					this._edicion = value;
					this.SendPropertyChanged("edicion");
					this.OnedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGenero", DbType="Int")]
		public System.Nullable<int> idGenero
		{
			get
			{
				return this._idGenero;
			}
			set
			{
				if ((this._idGenero != value))
				{
					if (this._Generos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGeneroChanging(value);
					this.SendPropertyChanging();
					this._idGenero = value;
					this.SendPropertyChanged("idGenero");
					this.OnidGeneroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto", DbType="NVarChar(80)")]
		public string foto
		{
			get
			{
				return this._foto;
			}
			set
			{
				if ((this._foto != value))
				{
					this.OnfotoChanging(value);
					this.SendPropertyChanging();
					this._foto = value;
					this.SendPropertyChanged("foto");
					this.OnfotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sinopsis", DbType="NVarChar(MAX)")]
		public string sinopsis
		{
			get
			{
				return this._sinopsis;
			}
			set
			{
				if ((this._sinopsis != value))
				{
					this.OnsinopsisChanging(value);
					this.SendPropertyChanging();
					this._sinopsis = value;
					this.SendPropertyChanged("sinopsis");
					this.OnsinopsisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock", DbType="Int")]
		public System.Nullable<int> stock
		{
			get
			{
				return this._stock;
			}
			set
			{
				if ((this._stock != value))
				{
					this.OnstockChanging(value);
					this.SendPropertyChanging();
					this._stock = value;
					this.SendPropertyChanged("stock");
					this.OnstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaAlta", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaAlta
		{
			get
			{
				return this._fechaAlta;
			}
			set
			{
				if ((this._fechaAlta != value))
				{
					this.OnfechaAltaChanging(value);
					this.SendPropertyChanging();
					this._fechaAlta = value;
					this.SendPropertyChanged("fechaAlta");
					this.OnfechaAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_AutorPorLibro", Storage="_AutorPorLibro", ThisKey="codigoBarra", OtherKey="codigoLibro")]
		public EntitySet<AutorPorLibro> AutorPorLibro
		{
			get
			{
				return this._AutorPorLibro;
			}
			set
			{
				this._AutorPorLibro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_CalificacionPorLibro", Storage="_CalificacionPorLibro", ThisKey="codigoBarra", OtherKey="codigoLibro")]
		public EntitySet<CalificacionPorLibro> CalificacionPorLibro
		{
			get
			{
				return this._CalificacionPorLibro;
			}
			set
			{
				this._CalificacionPorLibro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_ComentarioPorLibro", Storage="_ComentarioPorLibro", ThisKey="codigoBarra", OtherKey="codigoLibro")]
		public EntitySet<ComentarioPorLibro> ComentarioPorLibro
		{
			get
			{
				return this._ComentarioPorLibro;
			}
			set
			{
				this._ComentarioPorLibro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Libros_DetallePorPedido", Storage="_DetallePorPedido", ThisKey="codigoBarra", OtherKey="codigoLibro")]
		public EntitySet<DetallePorPedido> DetallePorPedido
		{
			get
			{
				return this._DetallePorPedido;
			}
			set
			{
				this._DetallePorPedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Editoriales_Libros", Storage="_Editoriales", ThisKey="idEditorial", OtherKey="idEditorial", IsForeignKey=true)]
		public Editoriales Editoriales
		{
			get
			{
				return this._Editoriales.Entity;
			}
			set
			{
				Editoriales previousValue = this._Editoriales.Entity;
				if (((previousValue != value) 
							|| (this._Editoriales.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Editoriales.Entity = null;
						previousValue.Libros.Remove(this);
					}
					this._Editoriales.Entity = value;
					if ((value != null))
					{
						value.Libros.Add(this);
						this._idEditorial = value.idEditorial;
					}
					else
					{
						this._idEditorial = default(Nullable<int>);
					}
					this.SendPropertyChanged("Editoriales");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Generos_Libros", Storage="_Generos", ThisKey="idGenero", OtherKey="idGenero", IsForeignKey=true)]
		public Generos Generos
		{
			get
			{
				return this._Generos.Entity;
			}
			set
			{
				Generos previousValue = this._Generos.Entity;
				if (((previousValue != value) 
							|| (this._Generos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Generos.Entity = null;
						previousValue.Libros.Remove(this);
					}
					this._Generos.Entity = value;
					if ((value != null))
					{
						value.Libros.Add(this);
						this._idGenero = value.idGenero;
					}
					else
					{
						this._idGenero = default(Nullable<int>);
					}
					this.SendPropertyChanged("Generos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AutorPorLibro(AutorPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Libros = this;
		}
		
		private void detach_AutorPorLibro(AutorPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Libros = null;
		}
		
		private void attach_CalificacionPorLibro(CalificacionPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Libros = this;
		}
		
		private void detach_CalificacionPorLibro(CalificacionPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Libros = null;
		}
		
		private void attach_ComentarioPorLibro(ComentarioPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Libros = this;
		}
		
		private void detach_ComentarioPorLibro(ComentarioPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Libros = null;
		}
		
		private void attach_DetallePorPedido(DetallePorPedido entity)
		{
			this.SendPropertyChanging();
			entity.Libros = this;
		}
		
		private void detach_DetallePorPedido(DetallePorPedido entity)
		{
			this.SendPropertyChanging();
			entity.Libros = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Localidades")]
	public partial class Localidades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLocalidad;
		
		private int _idProvincia;
		
		private string _nombre;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntitySet<Usuarios> _Usuarios;
		
		private EntityRef<Provincias> _Provincias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLocalidadChanging(int value);
    partial void OnidLocalidadChanged();
    partial void OnidProvinciaChanging(int value);
    partial void OnidProvinciaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Localidades()
		{
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			this._Provincias = default(EntityRef<Provincias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLocalidad", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idLocalidad
		{
			get
			{
				return this._idLocalidad;
			}
			set
			{
				if ((this._idLocalidad != value))
				{
					this.OnidLocalidadChanging(value);
					this.SendPropertyChanging();
					this._idLocalidad = value;
					this.SendPropertyChanged("idLocalidad");
					this.OnidLocalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvincia", DbType="Int NOT NULL")]
		public int idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					if (this._Provincias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localidades_Pedidos", Storage="_Pedidos", ThisKey="idLocalidad", OtherKey="idLocalidadEntrega")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localidades_Usuarios", Storage="_Usuarios", ThisKey="idLocalidad", OtherKey="idLocalidad")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincias_Localidades", Storage="_Provincias", ThisKey="idProvincia", OtherKey="idProvincia", IsForeignKey=true)]
		public Provincias Provincias
		{
			get
			{
				return this._Provincias.Entity;
			}
			set
			{
				Provincias previousValue = this._Provincias.Entity;
				if (((previousValue != value) 
							|| (this._Provincias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincias.Entity = null;
						previousValue.Localidades.Remove(this);
					}
					this._Provincias.Entity = value;
					if ((value != null))
					{
						value.Localidades.Add(this);
						this._idProvincia = value.idProvincia;
					}
					else
					{
						this._idProvincia = default(int);
					}
					this.SendPropertyChanged("Provincias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Localidades = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Localidades = null;
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Localidades = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Localidades = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedidos")]
	public partial class Pedidos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPedido;
		
		private int _idUsuario;
		
		private System.DateTime _fechaHora;
		
		private System.Nullable<System.DateTime> _fechaEntrega;
		
		private string _direccionEntrega;
		
		private int _idLocalidadEntrega;
		
		private int _idProvinciaEntrega;
		
		private int _idEstadoPedido;
		
		private string _comentario;
		
		private EntitySet<DetallePorPedido> _DetallePorPedido;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Localidades> _Localidades;
		
		private EntityRef<Provincias> _Provincias;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPedidoChanging(int value);
    partial void OnidPedidoChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnfechaHoraChanging(System.DateTime value);
    partial void OnfechaHoraChanged();
    partial void OnfechaEntregaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaEntregaChanged();
    partial void OndireccionEntregaChanging(string value);
    partial void OndireccionEntregaChanged();
    partial void OnidLocalidadEntregaChanging(int value);
    partial void OnidLocalidadEntregaChanged();
    partial void OnidProvinciaEntregaChanging(int value);
    partial void OnidProvinciaEntregaChanged();
    partial void OnidEstadoPedidoChanging(int value);
    partial void OnidEstadoPedidoChanged();
    partial void OncomentarioChanging(string value);
    partial void OncomentarioChanged();
    #endregion
		
		public Pedidos()
		{
			this._DetallePorPedido = new EntitySet<DetallePorPedido>(new Action<DetallePorPedido>(this.attach_DetallePorPedido), new Action<DetallePorPedido>(this.detach_DetallePorPedido));
			this._Estados = default(EntityRef<Estados>);
			this._Localidades = default(EntityRef<Localidades>);
			this._Provincias = default(EntityRef<Provincias>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPedido", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPedido
		{
			get
			{
				return this._idPedido;
			}
			set
			{
				if ((this._idPedido != value))
				{
					this.OnidPedidoChanging(value);
					this.SendPropertyChanging();
					this._idPedido = value;
					this.SendPropertyChanged("idPedido");
					this.OnidPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaHora", AutoSync=AutoSync.Always, DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime fechaHora
		{
			get
			{
				return this._fechaHora;
			}
			set
			{
				if ((this._fechaHora != value))
				{
					this.OnfechaHoraChanging(value);
					this.SendPropertyChanging();
					this._fechaHora = value;
					this.SendPropertyChanged("fechaHora");
					this.OnfechaHoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaEntrega", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaEntrega
		{
			get
			{
				return this._fechaEntrega;
			}
			set
			{
				if ((this._fechaEntrega != value))
				{
					this.OnfechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._fechaEntrega = value;
					this.SendPropertyChanged("fechaEntrega");
					this.OnfechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccionEntrega", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string direccionEntrega
		{
			get
			{
				return this._direccionEntrega;
			}
			set
			{
				if ((this._direccionEntrega != value))
				{
					this.OndireccionEntregaChanging(value);
					this.SendPropertyChanging();
					this._direccionEntrega = value;
					this.SendPropertyChanged("direccionEntrega");
					this.OndireccionEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLocalidadEntrega", DbType="Int NOT NULL")]
		public int idLocalidadEntrega
		{
			get
			{
				return this._idLocalidadEntrega;
			}
			set
			{
				if ((this._idLocalidadEntrega != value))
				{
					if (this._Localidades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLocalidadEntregaChanging(value);
					this.SendPropertyChanging();
					this._idLocalidadEntrega = value;
					this.SendPropertyChanged("idLocalidadEntrega");
					this.OnidLocalidadEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvinciaEntrega", DbType="Int NOT NULL")]
		public int idProvinciaEntrega
		{
			get
			{
				return this._idProvinciaEntrega;
			}
			set
			{
				if ((this._idProvinciaEntrega != value))
				{
					if (this._Provincias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProvinciaEntregaChanging(value);
					this.SendPropertyChanging();
					this._idProvinciaEntrega = value;
					this.SendPropertyChanged("idProvinciaEntrega");
					this.OnidProvinciaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstadoPedido", DbType="Int NOT NULL")]
		public int idEstadoPedido
		{
			get
			{
				return this._idEstadoPedido;
			}
			set
			{
				if ((this._idEstadoPedido != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoPedidoChanging(value);
					this.SendPropertyChanging();
					this._idEstadoPedido = value;
					this.SendPropertyChanged("idEstadoPedido");
					this.OnidEstadoPedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentario", DbType="NVarChar(100)")]
		public string comentario
		{
			get
			{
				return this._comentario;
			}
			set
			{
				if ((this._comentario != value))
				{
					this.OncomentarioChanging(value);
					this.SendPropertyChanging();
					this._comentario = value;
					this.SendPropertyChanged("comentario");
					this.OncomentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedidos_DetallePorPedido", Storage="_DetallePorPedido", ThisKey="idPedido", OtherKey="idPedido")]
		public EntitySet<DetallePorPedido> DetallePorPedido
		{
			get
			{
				return this._DetallePorPedido;
			}
			set
			{
				this._DetallePorPedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Pedidos", Storage="_Estados", ThisKey="idEstadoPedido", OtherKey="idEstado", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._idEstadoPedido = value.idEstado;
					}
					else
					{
						this._idEstadoPedido = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localidades_Pedidos", Storage="_Localidades", ThisKey="idLocalidadEntrega", OtherKey="idLocalidad", IsForeignKey=true)]
		public Localidades Localidades
		{
			get
			{
				return this._Localidades.Entity;
			}
			set
			{
				Localidades previousValue = this._Localidades.Entity;
				if (((previousValue != value) 
							|| (this._Localidades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localidades.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Localidades.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._idLocalidadEntrega = value.idLocalidad;
					}
					else
					{
						this._idLocalidadEntrega = default(int);
					}
					this.SendPropertyChanged("Localidades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincias_Pedidos", Storage="_Provincias", ThisKey="idProvinciaEntrega", OtherKey="idProvincia", IsForeignKey=true)]
		public Provincias Provincias
		{
			get
			{
				return this._Provincias.Entity;
			}
			set
			{
				Provincias previousValue = this._Provincias.Entity;
				if (((previousValue != value) 
							|| (this._Provincias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincias.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Provincias.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._idProvinciaEntrega = value.idProvincia;
					}
					else
					{
						this._idProvinciaEntrega = default(int);
					}
					this.SendPropertyChanged("Provincias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos", Storage="_Usuarios", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetallePorPedido(DetallePorPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedidos = this;
		}
		
		private void detach_DetallePorPedido(DetallePorPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedidos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provincias")]
	public partial class Provincias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProvincia;
		
		private string _nombre;
		
		private EntitySet<Localidades> _Localidades;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProvinciaChanging(int value);
    partial void OnidProvinciaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public Provincias()
		{
			this._Localidades = new EntitySet<Localidades>(new Action<Localidades>(this.attach_Localidades), new Action<Localidades>(this.detach_Localidades));
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvincia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincias_Localidades", Storage="_Localidades", ThisKey="idProvincia", OtherKey="idProvincia")]
		public EntitySet<Localidades> Localidades
		{
			get
			{
				return this._Localidades;
			}
			set
			{
				this._Localidades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincias_Pedidos", Storage="_Pedidos", ThisKey="idProvincia", OtherKey="idProvinciaEntrega")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincias_Usuarios", Storage="_Usuarios", ThisKey="idProvincia", OtherKey="idProvincia")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Localidades(Localidades entity)
		{
			this.SendPropertyChanging();
			entity.Provincias = this;
		}
		
		private void detach_Localidades(Localidades entity)
		{
			this.SendPropertyChanging();
			entity.Provincias = null;
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Provincias = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Provincias = null;
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Provincias = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Provincias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PublicacionPorUsuario")]
	public partial class PublicacionPorUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPublicacion;
		
		private int _idUsuario;
		
		private string _tituloPublicacion;
		
		private string _descripcion;
		
		private string _foto1;
		
		private string _foto2;
		
		private string _foto3;
		
		private int _idEstado;
		
		private EntitySet<Intercambios> _Intercambios;
		
		private EntitySet<Intercambios> _Intercambios1;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPublicacionChanging(int value);
    partial void OnidPublicacionChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OntituloPublicacionChanging(string value);
    partial void OntituloPublicacionChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void Onfoto1Changing(string value);
    partial void Onfoto1Changed();
    partial void Onfoto2Changing(string value);
    partial void Onfoto2Changed();
    partial void Onfoto3Changing(string value);
    partial void Onfoto3Changed();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    #endregion
		
		public PublicacionPorUsuario()
		{
			this._Intercambios = new EntitySet<Intercambios>(new Action<Intercambios>(this.attach_Intercambios), new Action<Intercambios>(this.detach_Intercambios));
			this._Intercambios1 = new EntitySet<Intercambios>(new Action<Intercambios>(this.attach_Intercambios1), new Action<Intercambios>(this.detach_Intercambios1));
			this._Estados = default(EntityRef<Estados>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPublicacion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idPublicacion
		{
			get
			{
				return this._idPublicacion;
			}
			set
			{
				if ((this._idPublicacion != value))
				{
					this.OnidPublicacionChanging(value);
					this.SendPropertyChanging();
					this._idPublicacion = value;
					this.SendPropertyChanged("idPublicacion");
					this.OnidPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tituloPublicacion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tituloPublicacion
		{
			get
			{
				return this._tituloPublicacion;
			}
			set
			{
				if ((this._tituloPublicacion != value))
				{
					this.OntituloPublicacionChanging(value);
					this.SendPropertyChanging();
					this._tituloPublicacion = value;
					this.SendPropertyChanged("tituloPublicacion");
					this.OntituloPublicacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string foto1
		{
			get
			{
				return this._foto1;
			}
			set
			{
				if ((this._foto1 != value))
				{
					this.Onfoto1Changing(value);
					this.SendPropertyChanging();
					this._foto1 = value;
					this.SendPropertyChanged("foto1");
					this.Onfoto1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto2", DbType="NVarChar(50)")]
		public string foto2
		{
			get
			{
				return this._foto2;
			}
			set
			{
				if ((this._foto2 != value))
				{
					this.Onfoto2Changing(value);
					this.SendPropertyChanging();
					this._foto2 = value;
					this.SendPropertyChanged("foto2");
					this.Onfoto2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto3", DbType="NVarChar(50)")]
		public string foto3
		{
			get
			{
				return this._foto3;
			}
			set
			{
				if ((this._foto3 != value))
				{
					this.Onfoto3Changing(value);
					this.SendPropertyChanging();
					this._foto3 = value;
					this.SendPropertyChanged("foto3");
					this.Onfoto3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublicacionPorUsuario_Intercambios", Storage="_Intercambios", ThisKey="idPublicacion", OtherKey="idPublicacionUsuario1")]
		public EntitySet<Intercambios> Intercambios
		{
			get
			{
				return this._Intercambios;
			}
			set
			{
				this._Intercambios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PublicacionPorUsuario_Intercambios1", Storage="_Intercambios1", ThisKey="idPublicacion", OtherKey="idPublicacionUsuario2")]
		public EntitySet<Intercambios> Intercambios1
		{
			get
			{
				return this._Intercambios1;
			}
			set
			{
				this._Intercambios1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_PublicacionPorUsuario", Storage="_Estados", ThisKey="idEstado", OtherKey="idEstado", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.PublicacionPorUsuario.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.PublicacionPorUsuario.Add(this);
						this._idEstado = value.idEstado;
					}
					else
					{
						this._idEstado = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_PublicacionPorUsuario", Storage="_Usuarios", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.PublicacionPorUsuario.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.PublicacionPorUsuario.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Intercambios(Intercambios entity)
		{
			this.SendPropertyChanging();
			entity.PublicacionPorUsuario = this;
		}
		
		private void detach_Intercambios(Intercambios entity)
		{
			this.SendPropertyChanging();
			entity.PublicacionPorUsuario = null;
		}
		
		private void attach_Intercambios1(Intercambios entity)
		{
			this.SendPropertyChanging();
			entity.PublicacionPorUsuario1 = this;
		}
		
		private void detach_Intercambios1(Intercambios entity)
		{
			this.SendPropertyChanging();
			entity.PublicacionPorUsuario1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _mail;
		
		private string _contraseña;
		
		private string _nombreUsuario;
		
		private System.DateTime _fechaHoraAlta;
		
		private System.Nullable<System.DateTime> _fechaHoraBaja;
		
		private string _direccion;
		
		private System.Nullable<int> _idProvincia;
		
		private System.Nullable<int> _idLocalidad;
		
		private EntitySet<CalificacionPorLibro> _CalificacionPorLibro;
		
		private EntitySet<CalificacionPorUsuario> _CalificacionPorUsuario;
		
		private EntitySet<CalificacionPorUsuario> _CalificacionPorUsuario1;
		
		private EntitySet<ComentarioPorLibro> _ComentarioPorLibro;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntitySet<PublicacionPorUsuario> _PublicacionPorUsuario;
		
		private EntityRef<Localidades> _Localidades;
		
		private EntityRef<Provincias> _Provincias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnmailChanging(string value);
    partial void OnmailChanged();
    partial void OncontraseñaChanging(string value);
    partial void OncontraseñaChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OnfechaHoraAltaChanging(System.DateTime value);
    partial void OnfechaHoraAltaChanged();
    partial void OnfechaHoraBajaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaHoraBajaChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnidProvinciaChanging(System.Nullable<int> value);
    partial void OnidProvinciaChanged();
    partial void OnidLocalidadChanging(System.Nullable<int> value);
    partial void OnidLocalidadChanged();
    #endregion
		
		public Usuarios()
		{
			this._CalificacionPorLibro = new EntitySet<CalificacionPorLibro>(new Action<CalificacionPorLibro>(this.attach_CalificacionPorLibro), new Action<CalificacionPorLibro>(this.detach_CalificacionPorLibro));
			this._CalificacionPorUsuario = new EntitySet<CalificacionPorUsuario>(new Action<CalificacionPorUsuario>(this.attach_CalificacionPorUsuario), new Action<CalificacionPorUsuario>(this.detach_CalificacionPorUsuario));
			this._CalificacionPorUsuario1 = new EntitySet<CalificacionPorUsuario>(new Action<CalificacionPorUsuario>(this.attach_CalificacionPorUsuario1), new Action<CalificacionPorUsuario>(this.detach_CalificacionPorUsuario1));
			this._ComentarioPorLibro = new EntitySet<ComentarioPorLibro>(new Action<ComentarioPorLibro>(this.attach_ComentarioPorLibro), new Action<ComentarioPorLibro>(this.detach_ComentarioPorLibro));
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._PublicacionPorUsuario = new EntitySet<PublicacionPorUsuario>(new Action<PublicacionPorUsuario>(this.attach_PublicacionPorUsuario), new Action<PublicacionPorUsuario>(this.detach_PublicacionPorUsuario));
			this._Localidades = default(EntityRef<Localidades>);
			this._Provincias = default(EntityRef<Provincias>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string mail
		{
			get
			{
				return this._mail;
			}
			set
			{
				if ((this._mail != value))
				{
					this.OnmailChanging(value);
					this.SendPropertyChanging();
					this._mail = value;
					this.SendPropertyChanged("mail");
					this.OnmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contraseña", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string contraseña
		{
			get
			{
				return this._contraseña;
			}
			set
			{
				if ((this._contraseña != value))
				{
					this.OncontraseñaChanging(value);
					this.SendPropertyChanging();
					this._contraseña = value;
					this.SendPropertyChanged("contraseña");
					this.OncontraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreUsuario", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaHoraAlta", AutoSync=AutoSync.Always, DbType="DateTime NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.DateTime fechaHoraAlta
		{
			get
			{
				return this._fechaHoraAlta;
			}
			set
			{
				if ((this._fechaHoraAlta != value))
				{
					this.OnfechaHoraAltaChanging(value);
					this.SendPropertyChanging();
					this._fechaHoraAlta = value;
					this.SendPropertyChanged("fechaHoraAlta");
					this.OnfechaHoraAltaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaHoraBaja", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaHoraBaja
		{
			get
			{
				return this._fechaHoraBaja;
			}
			set
			{
				if ((this._fechaHoraBaja != value))
				{
					this.OnfechaHoraBajaChanging(value);
					this.SendPropertyChanging();
					this._fechaHoraBaja = value;
					this.SendPropertyChanged("fechaHoraBaja");
					this.OnfechaHoraBajaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="NVarChar(100)")]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProvincia", DbType="Int")]
		public System.Nullable<int> idProvincia
		{
			get
			{
				return this._idProvincia;
			}
			set
			{
				if ((this._idProvincia != value))
				{
					if (this._Provincias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProvinciaChanging(value);
					this.SendPropertyChanging();
					this._idProvincia = value;
					this.SendPropertyChanged("idProvincia");
					this.OnidProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLocalidad", DbType="Int")]
		public System.Nullable<int> idLocalidad
		{
			get
			{
				return this._idLocalidad;
			}
			set
			{
				if ((this._idLocalidad != value))
				{
					if (this._Localidades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLocalidadChanging(value);
					this.SendPropertyChanging();
					this._idLocalidad = value;
					this.SendPropertyChanged("idLocalidad");
					this.OnidLocalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_CalificacionPorLibro", Storage="_CalificacionPorLibro", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<CalificacionPorLibro> CalificacionPorLibro
		{
			get
			{
				return this._CalificacionPorLibro;
			}
			set
			{
				this._CalificacionPorLibro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_CalificacionPorUsuario", Storage="_CalificacionPorUsuario", ThisKey="idUsuario", OtherKey="idUsuarioCalificado")]
		public EntitySet<CalificacionPorUsuario> CalificacionPorUsuario
		{
			get
			{
				return this._CalificacionPorUsuario;
			}
			set
			{
				this._CalificacionPorUsuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_CalificacionPorUsuario1", Storage="_CalificacionPorUsuario1", ThisKey="idUsuario", OtherKey="idUsuarioCalificador")]
		public EntitySet<CalificacionPorUsuario> CalificacionPorUsuario1
		{
			get
			{
				return this._CalificacionPorUsuario1;
			}
			set
			{
				this._CalificacionPorUsuario1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_ComentarioPorLibro", Storage="_ComentarioPorLibro", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<ComentarioPorLibro> ComentarioPorLibro
		{
			get
			{
				return this._ComentarioPorLibro;
			}
			set
			{
				this._ComentarioPorLibro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos", Storage="_Pedidos", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_PublicacionPorUsuario", Storage="_PublicacionPorUsuario", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<PublicacionPorUsuario> PublicacionPorUsuario
		{
			get
			{
				return this._PublicacionPorUsuario;
			}
			set
			{
				this._PublicacionPorUsuario.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Localidades_Usuarios", Storage="_Localidades", ThisKey="idLocalidad", OtherKey="idLocalidad", IsForeignKey=true)]
		public Localidades Localidades
		{
			get
			{
				return this._Localidades.Entity;
			}
			set
			{
				Localidades previousValue = this._Localidades.Entity;
				if (((previousValue != value) 
							|| (this._Localidades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Localidades.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Localidades.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._idLocalidad = value.idLocalidad;
					}
					else
					{
						this._idLocalidad = default(Nullable<int>);
					}
					this.SendPropertyChanged("Localidades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincias_Usuarios", Storage="_Provincias", ThisKey="idProvincia", OtherKey="idProvincia", IsForeignKey=true)]
		public Provincias Provincias
		{
			get
			{
				return this._Provincias.Entity;
			}
			set
			{
				Provincias previousValue = this._Provincias.Entity;
				if (((previousValue != value) 
							|| (this._Provincias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincias.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Provincias.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._idProvincia = value.idProvincia;
					}
					else
					{
						this._idProvincia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Provincias");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CalificacionPorLibro(CalificacionPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_CalificacionPorLibro(CalificacionPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_CalificacionPorUsuario(CalificacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_CalificacionPorUsuario(CalificacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_CalificacionPorUsuario1(CalificacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios1 = this;
		}
		
		private void detach_CalificacionPorUsuario1(CalificacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios1 = null;
		}
		
		private void attach_ComentarioPorLibro(ComentarioPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_ComentarioPorLibro(ComentarioPorLibro entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_PublicacionPorUsuario(PublicacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_PublicacionPorUsuario(PublicacionPorUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
}
#pragma warning restore 1591
